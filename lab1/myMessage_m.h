//
// Generated file, do not edit! Created by nedtool 4.6 from myMessage.msg.
//

#ifndef _MYMESSAGE_M_H_
#define _MYMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>myMessage.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet MyMessage
 * {
 *     int id;
 *     string type;
 *     int sourceAdd;
 *     int destinationAdd;
 * }
 * </pre>
 */
class MyMessage : public ::cPacket
{
  protected:
    int id_var;
    opp_string type_var;
    int sourceAdd_var;
    int destinationAdd_var;

  private:
    void copy(const MyMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MyMessage&);

  public:
    MyMessage(const char *name=NULL, int kind=0);
    MyMessage(const MyMessage& other);
    virtual ~MyMessage();
    MyMessage& operator=(const MyMessage& other);
    virtual MyMessage *dup() const {return new MyMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getId() const;
    virtual void setId(int id);
    virtual const char * getType() const;
    virtual void setType(const char * type);
    virtual int getSourceAdd() const;
    virtual void setSourceAdd(int sourceAdd);
    virtual int getDestinationAdd() const;
    virtual void setDestinationAdd(int destinationAdd);
};

inline void doPacking(cCommBuffer *b, MyMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MyMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef _MYMESSAGE_M_H_

